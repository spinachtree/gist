
Parser Expression Grammar style.
- simple to read, easy to parse
- operator precedence levels: op2 > op1
- flat lists, left association delegated to evaluation

gist
	exp   = term (op1 term)*
	term  = val (op2 val)*
	val   = int / '(' exp ')'
	op1   : '+' / '-'
	op2   : '*' / '/'
	int   : '0'..'9'+

parse
	1+2*(3-4/2+1)-3

Star rules prune the parse tree...

gist
	exp   = term (op1 term)*
	term* = val (op2 val)*
	val*  = int / '(' exp ')'
	op1   : '+' / '-'
	op2   : '*' / '/'
	int   : '0'..'9'+

parse
	1+2+3*(3-4/2+1)-3

