
Examples of left recursion.

Left recursion is left-associative: 1+2+3+4 => (((1+2)+3)+4)

gist
	sum   = sum '+' int | int
	int   : '0'..'9'+

parse	1+2+3+4

Right recursion is right-associative: 1+2+3+4 => (1+(2+(3+4)))

gist
	sum   = int '+' sum | int
	int   : '0'..'9'+

parse	1+2+3+4

A rule with both left and right recursion is problematic. Perhaps it should be a balance, so that 1+2+3+4 => ((1+2)+(3+4)), but what about 1+2+3? Should that be (1+(2+3)) or ((1+2)+3). We need to pick left or right association, or the parser could simply reject or fail such rules. Gist produces right association: 1+2+3+4 => (1+(2+(3+4))).

gist
	sum   = sum '+' sum | int
	int   : '0'..'9'+

parse	1+2+3+4

